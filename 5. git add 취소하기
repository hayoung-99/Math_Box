1. 파일을 staging area에 넣는 커맨드는 "git area", 반대로 staging area에 있는 파일을 제거하는 커맨드는 "git reset"

2. 예를 들어 새로 수정한 파일을 add한 뒤, 나중가서 이 수정한 것을 commit하면 안되겠다 생각하여 수정하기 이전 파일로 돌아가고 싶을 때 git reset 커맨드를 사용한다. 주의할 점은 staging area에 수정 파일이 제거되는 것이고, working directory에는 여전히 수정된 부분이 그대로 존재한다. 이는 개인이 수정한 부분을 직접 제거해야 함.

3. git reset을 사용 후 git status 커맨드가 실행되는 것을 보면 staging area에 아예 해당 파일이 삭제된 게 아니라 수정버전 이전의 파일로 돌아가는 듯 하다. 이후에 working directory에서 이전으로 돌려놓은 뒤, git status 커맨드를 실행하면 아래와 같은 결과가 나온다.

On branch master
nothing to commit, working tree clean

위의 뜻은 working directory에 있는 작업물과 최신에 commit된 작업물이 똑같음을 의미한다. 즉 git reset으로 수정파일을 staging area에서 내린 다음, 수정하기 이전의 모습으로 working directory에서 다시 돌려놨으므로 최신에 commit한 것들과 모두 똑같음.

4. git reset 커맨드를 이용할 땐 뒤에 reset하고자 하는 파일 이름을 써야한다.
ex) git reset calculator.py
이 커맨드를 실행하면 아래와 같은 결과 예시가 출력된다.

Unstaged changes after reset:
M       calculator.py

5. 다음은 해당 강의의 QnA
: git rm file과 git reset file의 차이점? git rm file은 원격저장소/로컬저장소의 staging area에서 파일을 내릴뿐만 아니라 실제 파일도 삭제하는 기능을 한다. 이는 대부분 --cached 옵션과 함께 원격저장소에 잘못된 파일을 올렸을 때, 원격저장소의 파일을 삭제하고 staging area에서 파일을 내리기 위해 쓰인다고 한다. staging area에서 파일을 내리기 위해 쓰는건 주로 reset을 이용.