[git stash]: 이전에 다른 branch로 이동할 때 지금 작업하고 있던 내용을 임시 저장할 때 쓰인다고 배웠는데, 이 커맨드는 또다른 상황에서도 쓰인다. 

=> [git stash]: "잘못된 branch에서 작업했을 때". branch가 많은 경우 잘못된 branch에서 작업할 수 있을 때, 이를 지우고 하지 말고, 작업한 내용을 다른 branch로 그대로 옮길 수 있다. 

이 커맨드는 꼭 해당 branch에서만 쓸 수 있는게 아니라 다른 branch에서도 사용할 수 있다.
즉 a라는 branch에서 내용을 작업했더라도, 이를 다시 a에서 커맨드를 써야하는게 아니라 b라는 branch에서 해당 커맨드를 써서 작업한 내용을 다른 branch로 옮길 수 있다. 

[git stash apply stash@{}]: 전에는 [git stash apply] 커맨드를 통해 임시 저장한 내용을 불러왔지만, 더 확실하게 "어떤 내용을 부를 것인지"는 stash@{} 를 통해 세밀하게 작업할 수 있다.

git stash로 한 branch로 임시 저장한 내용을 다른 branch로 가져올 때, conflict가 발생할 수 있다. 이때는 이전에 배운대로 conflict가 발생한 파일로 들어가 conflict가 발생한 부분을 내가 직접 고쳐준다. 그러고 터미널에서 git add와 commit을 하면 된다. 

[git stash drop stash@{}]/: [git stash apply]를 했다고 stack에 내용이 사라지는 것이 아니다. [git stash apply]로 내용을 불러왔거나 혹은 더 이상 임시저장한 내용이 쓸모없으면 그 때 그 때 stack에 있는 내용을 삭제해줘야 한다. 그 때 이 커맨드를 사용한다. 